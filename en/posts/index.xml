<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on (not)Unique experience</title>
    <link>https://fi5t.xyz/en/posts/</link>
    <description>Recent content in Posts on (not)Unique experience</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru-ru</language>
    <lastBuildDate>Wed, 24 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://fi5t.xyz/en/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Evolution of vulnerabilities in Android apps</title>
      <link>https://fi5t.xyz/en/posts/evolution-of-vulnerabilities-in-android-apps/</link>
      <pubDate>Wed, 24 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://fi5t.xyz/en/posts/evolution-of-vulnerabilities-in-android-apps/</guid>
      <description>The history of Android app development has gone through several notable stages, from small apps running locally, to client-server apps, app ecosystems, and super-apps. Each of these stages raised the bar of complexity, creating new vulnerabilities, and increased developers&amp;rsquo; concern about the security of both the applications and the data they operate with. The operating system itself has evolved, providing developers with more options and security mechanisms. But there are always a few more unknowns in this system of equations than meets the eye.</description>
    </item>
    
    <item>
      <title>Mobile application security</title>
      <link>https://fi5t.xyz/en/posts/mobile-apps-security/</link>
      <pubDate>Tue, 23 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://fi5t.xyz/en/posts/mobile-apps-security/</guid>
      <description>In 2022, our team discovered 216 vulnerabilities during studies of 25 pairs of apps for Android and iOS platforms. The storage of user data in clear text accounted for the largest share of vulnerabilities (14%). Despite the efforts of operation system developers and secure application development communities, this class of vulnerability has continued to be the most prevalent for several years in a row. This trend will remain relevant in 2023, although it is now very simple to use cryptography in mobile applications: both vendor and open-source solutions make working with cryptographic primitives easier for developers.</description>
    </item>
    
    <item>
      <title>Creating mTLS reverse proxy with Ktor</title>
      <link>https://fi5t.xyz/en/posts/reverse-proxy-with-mtls-and-ktor/</link>
      <pubDate>Sun, 01 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://fi5t.xyz/en/posts/reverse-proxy-with-mtls-and-ktor/</guid>
      <description>&lt;p&gt;If you like to integrate with external security systems, then you have probably come across such a thing
as &lt;a href=&#34;https://en.wikipedia.org/wiki/Mutual_authentication#mTLS&#34;&gt;Mutual TLS&lt;/a&gt; (also known as TLS mutual authentication or
mTLS). There is nothing particularly difficult in such integration. Except for two nuances:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Integration will have to be done in each service&lt;/li&gt;
&lt;li&gt;In each service you need to put client certificates for passing the mTLS handshake&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;And if you can somehow live and put up with the first nuance, then the second already causes much more problems and
leads to sad faces of your security team. To make them happy again, and at the same time eliminate the need to write the
same code in each service, can be made by a smart &lt;a href=&#34;https://en.wikipedia.org/wiki/Reverse_proxy&#34;&gt;reverse proxy&lt;/a&gt;, which
will take all the hardships and hardships handshake related and possibly some other additional logic. We will do this
farm on &lt;a href=&#34;https://ktor.io/&#34;&gt;Ktor&lt;/a&gt;, because why not;)&lt;/p&gt;
&lt;p&gt;To make them happy again, and at the same time get rid of the need to write the same code in each service, we will write
a smart &lt;a href=&#34;https://en.wikipedia.org/wiki/Reverse_proxy&#34;&gt;reverse proxy&lt;/a&gt; which will take care of all hardships associated
with an mTLS handshake and other security logic. I will implement all these things with Ktor, because why not ;)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Installing Drozer on macOS Catalina</title>
      <link>https://fi5t.xyz/en/posts/drozer-on-mac/</link>
      <pubDate>Wed, 05 Aug 2020 12:17:39 +0300</pubDate>
      
      <guid>https://fi5t.xyz/en/posts/drozer-on-mac/</guid>
      <description>&lt;p&gt;In general, I don&amp;rsquo;t use Drozer. And using this tool on macOS is unusual for me. If I do some &amp;ldquo;pentest things&amp;rdquo; I just take my Kali Linux with pre-installed Drozer and use it there. But the day has come, and I decided to install Drozer on my macOS. It was a real hell =)&lt;/p&gt;
&lt;p&gt;I spent a lot of time trying to make it work. Eventually, I had to rewrite a piece of class loader script&amp;hellip; A living hell! When everything started working right, I came up with a better way of installing Drozer on macOS and removed all this stuff . In fact, there are two good ways to do it. The Docker-way and the following one&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Android Context</title>
      <link>https://fi5t.xyz/en/posts/android-context/</link>
      <pubDate>Wed, 11 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://fi5t.xyz/en/posts/android-context/</guid>
      <description>I&amp;rsquo;ve come across an interesting article and want to share you my notes based on it. I made these notes as the mind map.
Original article: Mastering Android context
XMind file: Download</description>
    </item>
    
    <item>
      <title>Elemental Design Patterns (book). My review and notes.</title>
      <link>https://fi5t.xyz/en/posts/elemental-design-patterns-review/</link>
      <pubDate>Mon, 28 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://fi5t.xyz/en/posts/elemental-design-patterns-review/</guid>
      <description>&lt;p&gt;Recently, I read this book and want to share my thoughts about it with you.&lt;/p&gt;
&lt;p&gt;If you already know about GoF and their Design Patterns then the book will be a godsend for you. The author (and his team) did a great job to spread out GoF&amp;rsquo;s patterns into tiny, elemental patterns and to present the result to us. Why is it significant? It helps to understand the &amp;ldquo;big patterns&amp;rdquo; better and even build your own patterns.&lt;/p&gt;
&lt;p&gt;To tell the truth, the first half of the book seemed to me very boring. A lot of reasoning about &amp;ldquo;the meaning of life&amp;rdquo; and etc. I even wanted to stop reading it. Then I understood what this book is really about and read it from cover to cover.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
