<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>безопасность on (не)Уникальный опыт</title>
    <link>https://fi5t.xyz/tags/%D0%B1%D0%B5%D0%B7%D0%BE%D0%BF%D0%B0%D1%81%D0%BD%D0%BE%D1%81%D1%82%D1%8C/</link>
    <description>Recent content in безопасность on (не)Уникальный опыт</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru-ru</language>
    <lastBuildDate>Sun, 01 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://fi5t.xyz/tags/%D0%B1%D0%B5%D0%B7%D0%BE%D0%BF%D0%B0%D1%81%D0%BD%D0%BE%D1%81%D1%82%D1%8C/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Создаем reverse proxy с mTLS на Ktor</title>
      <link>https://fi5t.xyz/posts/reverse-proxy-with-mtls-and-ktor/</link>
      <pubDate>Sun, 01 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://fi5t.xyz/posts/reverse-proxy-with-mtls-and-ktor/</guid>
      <description>&lt;p&gt;Если вы любите интегрироваться с внешними системами, которые придерживаются высоких стандартов безопасности, то
наверняка сталкивались с такой штукой как &lt;a href=&#34;https://en.wikipedia.org/wiki/Mutual_authentication#mTLS&#34;&gt;Mutual TLS&lt;/a&gt; (aka
взаимная TLS аутентификация или mTLS). Ничего особенно сложного в такой интеграции нет. За исключением двух нюансов:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Интеграцию придется делать в каждом сервисе&lt;/li&gt;
&lt;li&gt;В каждый сервис нужно положить клиентские сертификаты для прохожения хэндшейка mTLS&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;И если с первым нюансом можно как-то жить и мириться, то второй уже вызывает гораздо больше проблем и приводит к
грустным лицам вашей команды инфобеза. Чтобы сделать их снова счастливыми, а заодно ликвидировать потребность писать
один и тот же код в каждом сервисе — можно сделать умный &lt;a href=&#34;https://en.wikipedia.org/wiki/Reverse_proxy&#34;&gt;reverse proxy&lt;/a&gt;, который возьмет на себя все тяготы и лишения
связанные с хэндшейком и возможно какой-то другой дополнительной логикой, которую накрутили авторы внешней системы.
Делать это хозяйство будем на &lt;a href=&#34;https://ktor.io/&#34;&gt;Ktor&lt;/a&gt;, потому что почему бы и нет ;)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Старый Drozer MacOS не испортит</title>
      <link>https://fi5t.xyz/posts/drozer-on-mac/</link>
      <pubDate>Tue, 04 Aug 2020 14:13:10 +0300</pubDate>
      
      <guid>https://fi5t.xyz/posts/drozer-on-mac/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Drozer - The Leading Security Assessment Framework for Android.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Обычно я не использую &lt;strong&gt;Drozer&lt;/strong&gt;, а еще реже (никогда) я использую его на MacOS. Обычно это все уже есть в Kali Linux и устанавливать ничего не нужно. Но необходимость появилась, а вместе с ней пришлось знатно покувыркаться и поправить скрипты самого Drozer-а чтобы все заработало. После чего я все удалил, потому что в системе было знатно насрано после всех этих замечательных туторилов и issue на гитхабе. В итоге стало понятно, что есть два нормальных способа установки. &lt;a href=&#34;https://hub.docker.com/r/kengannonmwr/drozer_docker&#34;&gt;Через Docker&lt;/a&gt;, и так как показано ниже. Все остальное - зло, ад и слезы по бездарно потраченным часам жизни.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
